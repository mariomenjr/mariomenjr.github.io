"use strict";(self.webpackChunkmariomenjr=self.webpackChunkmariomenjr||[]).push([[3401],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=o,b=m["".concat(l,".").concat(d)]||m[d]||p[d]||n;return r?a.createElement(b,s(s({ref:t},u),{},{components:r})):a.createElement(b,s({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,s=new Array(n);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<n;c++)s[c]=r[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(7294),o=r(6010);const n="tabItem_Ymn6";function s(e){let{children:t,hidden:r,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(n,s),hidden:r},t)}},5488:(e,t,r)=>{r.d(t,{Z:()=>d});var a=r(3117),o=r(7294),n=r(6010),s=r(2389),i=r(7392),l=r(7094),c=r(2466);const u="tabList__CuJ",p="tabItem_LNqP";function m(e){var t;const{lazy:r,block:s,defaultValue:m,values:d,groupId:b,className:g}=e,f=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=d??f.map((e=>{let{props:{value:t,label:r,attributes:a}}=e;return{value:t,label:r,attributes:a}})),y=(0,i.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===m?m:m??(null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)??f[0].props.value;if(null!==v&&!h.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:E}=(0,l.U)(),[k,j]=(0,o.useState)(v),T=[],{blockElementScrollPositionUntilNextRender:O}=(0,c.o5)();if(null!=b){const e=w[b];null!=e&&e!==k&&h.some((t=>t.value===e))&&j(e)}const x=e=>{const t=e.currentTarget,r=T.indexOf(t),a=h[r].value;a!==k&&(O(t),j(a),null!=b&&E(b,String(a)))},D=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;r=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;r=T[t]??T[T.length-1];break}}null==(t=r)||t.focus()};return o.createElement("div",{className:(0,n.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":s},g)},h.map((e=>{let{value:t,label:r,attributes:s}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>T.push(e),onKeyDown:D,onFocus:x,onClick:x},s,{className:(0,n.Z)("tabs__item",p,null==s?void 0:s.className,{"tabs__item--active":k===t})}),r??t)}))),r?(0,o.cloneElement)(f.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function d(e){const t=(0,s.Z)();return o.createElement(m,(0,a.Z)({key:String(t)},e))}},32:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var a=r(3117),o=(r(7294),r(3905));r(5488),r(5162);const n={slug:"2021/08/18/como-consultar-y-persistir-datos-en-mongodb-con--net",title:"C\xf3mo consultar y persistir datos en MongoDB con .NET",author:"Mario Menj\xedvar",author_title:"Software Engineer",author_url:"https://github.com/mariomenjr",author_image_url:"https://avatars3.githubusercontent.com/u/1946936?s=460&v=4",tags:["csharp","mongodb","repository pattern","patr\xf3n de repositorio","dao","data layer"],keywords:["consultar mongodb net","insertar documento mongodb net","crud mongodb net csharp","repository pattern mongodb net","mongodb csharp espa\xf1ol"],date:new Date("2021-08-18T23:31:18.000Z"),description:"En esta entrada, te mostrar\xe9 como implementar una capa de datos siguiendo el patr\xf3n repositorio para consultar y persistir datos a una instalaci\xf3n de MongoDB haciendo uso de C# y el .NET Core Framework.",image:"https://images.unsplash.com/photo-1597852074816-d933c7d2b988?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=512&q=80"},s=void 0,i={permalink:"/blog/2021/08/18/como-consultar-y-persistir-datos-en-mongodb-con--net",editUrl:"https://github.com/mariomenjr/mariomenjr/edit/main/blog/2021-08-18_como-consultar-y-persistir-datos-en-mongodb-con-net.md",source:"@site/blog/2021-08-18_como-consultar-y-persistir-datos-en-mongodb-con-net.md",title:"C\xf3mo consultar y persistir datos en MongoDB con .NET",description:"En esta entrada, te mostrar\xe9 como implementar una capa de datos siguiendo el patr\xf3n repositorio para consultar y persistir datos a una instalaci\xf3n de MongoDB haciendo uso de C# y el .NET Core Framework.",date:"2021-08-18T23:31:18.000Z",formattedDate:"18 de agosto de 2021",tags:[{label:"csharp",permalink:"/blog/tags/csharp"},{label:"mongodb",permalink:"/blog/tags/mongodb"},{label:"repository pattern",permalink:"/blog/tags/repository-pattern"},{label:"patr\xf3n de repositorio",permalink:"/blog/tags/patron-de-repositorio"},{label:"dao",permalink:"/blog/tags/dao"},{label:"data layer",permalink:"/blog/tags/data-layer"}],readingTime:16.545,hasTruncateMarker:!0,authors:[{name:"Mario Menj\xedvar",title:"Software Engineer",url:"https://github.com/mariomenjr",imageURL:"https://avatars3.githubusercontent.com/u/1946936?s=460&v=4"}],frontMatter:{slug:"2021/08/18/como-consultar-y-persistir-datos-en-mongodb-con--net",title:"C\xf3mo consultar y persistir datos en MongoDB con .NET",author:"Mario Menj\xedvar",author_title:"Software Engineer",author_url:"https://github.com/mariomenjr",author_image_url:"https://avatars3.githubusercontent.com/u/1946936?s=460&v=4",tags:["csharp","mongodb","repository pattern","patr\xf3n de repositorio","dao","data layer"],keywords:["consultar mongodb net","insertar documento mongodb net","crud mongodb net csharp","repository pattern mongodb net","mongodb csharp espa\xf1ol"],date:"2021-08-18T23:31:18.000Z",description:"En esta entrada, te mostrar\xe9 como implementar una capa de datos siguiendo el patr\xf3n repositorio para consultar y persistir datos a una instalaci\xf3n de MongoDB haciendo uso de C# y el .NET Core Framework.",image:"https://images.unsplash.com/photo-1597852074816-d933c7d2b988?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=512&q=80"},nextItem:{title:"Autenticaci\xf3n como servicio con Identity Server 4",permalink:"/blog/2021/07/29/autenticacion-como-servicio-con-identity-server-4"}},l={authorsImageUrls:[void 0]},c=[],u={toc:c};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Se ha escrito much\xedsimo acerca de las ventajas (y desventajas) de las bases de datos NoSQL frente a las SQL. Sin embargo, el tiempo nos ha ense\xf1ado que ambas son meras herramientas que son preferidas para casos espec\xedficos."),(0,o.kt)("p",null,"En esta entrada, te mostrar\xe9 como implementar una capa de datos siguiendo el patr\xf3n repositorio para consultar y persistir datos a una instalaci\xf3n de MongoDB haciendo uso de C# y el .NET Core Framework."))}p.isMDXComponent=!0}}]);